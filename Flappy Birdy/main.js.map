{
  "version": 3,
  "sources": ["../src/pillar.ts", "../src/player.ts", "../src/main.ts"],
  "sourcesContent": ["export {pillar};\r\n\r\nclass pillar {\r\n    x_coord: number;\r\n    upper_corner: number;\r\n    space_height: number;\r\n    context: CanvasRenderingContext2D;\r\n    seen: boolean;\r\n\r\n    constructor(x: number, height: number, context: CanvasRenderingContext2D) {\r\n        this.x_coord = x;\r\n        this.upper_corner = height * 400;\r\n        this.space_height = 400;\r\n        this.context = context;\r\n        this.seen = false;\r\n    }\r\n\r\n    move(x_dist: number) {\r\n        this.x_coord -= x_dist;\r\n    }\r\n\r\n    draw(window_height: number) {\r\n        this.context.fillStyle = \"darkGreen\";\r\n        this.context.fillRect(this.x_coord, 0, 150, window_height);\r\n        this.context.fillStyle = `hsl(195, 92%, 75%)`;\r\n        this.context.fillRect(this.x_coord, this.upper_corner, 150, this.space_height);\r\n    }\r\n}", "import { pillar } from \"./pillar\";\r\n\r\nexport {player};\r\n\r\n\r\nvar birdy = new Image();\r\nbirdy.src = \"birdy.png\";\r\n\r\n\r\nclass player {\r\n    x_coord: number;\r\n    y_coord:number;\r\n    height: number;\r\n    acc: number;\r\n    context: CanvasRenderingContext2D;\r\n    window_height: number;\r\n    score: number;\r\n\r\n    constructor(context: CanvasRenderingContext2D, height: number) {\r\n        this.x_coord = 50;\r\n        this.y_coord = 50;\r\n        this.height = 135;\r\n        this.acc = 1;\r\n        this.context = context;\r\n        this.window_height = height; \r\n        this.score = 0;\r\n    }\r\n\r\n    check_collision_and_score(pillars: pillar[]) {\r\n\r\n        if (this.y_coord > this.window_height) {\r\n            return true;\r\n        } else {\r\n            // mittelpunkt von birdy\r\n            const pl_x = this.x_coord + 356*0.75/2;\r\n            const pl_y = this.y_coord + 232*0.75/2;\r\n            for (let p of pillars) {\r\n                const pillar_x = p.x_coord + 75; //mittelpunkt der s\u00E4ule\r\n                if (pl_x - pillar_x  < 0 && pl_x - pillar_x > -170) {\r\n                    let y_d = pl_y - p.upper_corner;\r\n                    if ((y_d < 100 / 2) || (y_d > p.space_height - 100 / 2)) {   \r\n                        return true;\r\n                    }\r\n                } else if (pl_x - pillar_x  > 0 && pl_x - pillar_x < 170) {\r\n                    if (!p.seen) {\r\n                        p.seen = true;\r\n                        this.score += 1;\r\n                    }\r\n                    let y_d = pl_y - p.upper_corner;\r\n                    if ((y_d < 100) || (y_d > p.space_height - 100)) {   \r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fall(counter: number, pillars: pillar[]) {\r\n        this.acc += 1.5;\r\n        this.y_coord += 1 * this.acc / ((counter % 10)+ 1);\r\n        return this.check_collision_and_score(pillars);\r\n    }\r\n\r\n    jump(pillars: pillar[]){\r\n        this.acc = -30;\r\n        return this.check_collision_and_score(pillars);\r\n    }\r\n    \r\n    draw() {\r\n        this.context.drawImage(birdy, this.x_coord, this.y_coord, 356*0.75, 232*0.75);\r\n    }\r\n\r\n}", "/* TODO:\n\n- S\u00E4ulen !!!\n- score (spieler als Klasse?)\n\nsch\u00F6n sachen malen \n\nSCREENSHOTS AN b.kuhstoss@web.de\n\n\n*/  \n\n import {pillar} from \"./pillar\"\n import {player} from \"./player\"\n\nvar canvas: HTMLCanvasElement;\nvar context: CanvasRenderingContext2D;\n\n// game variables\n\n/*\nvar v_r = 100; // pixels per second\n*/\n\nvar counter = 0;\nvar velocity = 1;\n\nvar game_player: player;\nvar pillars: pillar[] = [];\nenum game_states {start, play, end}\n\nvar game_state = game_states.start;\n\n\nvar first_keypress = true;\n\n\n\n// system variables\nvar last_tick_t = 0;\nvar width: number;\nvar height: number;\nvar keyStates: Set<string> = new Set();\n\n//var plop = new Audio('plop.wav');\n\nfunction calculate_background() {\n    if (counter % 150 == 0) {\n        pillars.push(new pillar(width + 10, Math.random(), context));\n    }\n}\n\n\nfunction start() {\n    if (keyStates.has(\"ArrowDown\")) {\n        game_player = new player(context, height);\n        game_state = game_states.play;\n        pillars = [];\n    }\n}\n\nfunction play() {\n    counter = (counter + 1);\n    /*\n    if (counter % 200 == 0) {\n        velocity += 1;\n    }\n    */\n\n\n    calculate_background();\n    for (let p of pillars) {\n        p.move(5);\n        if (p.x_coord < -200) {\n            pillars.splice(pillars.indexOf(p), 1);\n        }\n    }\n    let end = game_player.fall(counter, pillars);\n    if (end) {\n        game_state = game_states.end;\n    }\n}\n\nfunction draw() {\n    context.fillStyle = `hsl(195, 92%, 75%)`;\n    context.fillRect(0, 0, width, height);\n    switch (game_state) {\n        case game_states.start:\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"DarkRed\";\n            context.font = '64px serif';\n            context.fillText(\"Flappy Birdy\", 100, 150);\n            context.strokeText(\"Flappy Birdy\", 100, 150);\n            context.font = '48px serif';\n            context.fillText(\"Press v (keydown) to start\", 100, 250);\n            context.strokeText(\"Press v (keydown) to start\", 100, 250);\n            context.fillText(\"Press ^ to jump\", 100, 300);\n            context.strokeText(\"Press ^ to jump\", 100, 300);\n            break;\n        case game_states.play:\n            for (let p of pillars) {\n                p.draw(height);\n            }\n            game_player.draw();\n            context.fillStyle = \"black\";\n            break;\n        case game_states.end:\n            context.fillStyle = \"DarkRed\";\n            context.font = '64px serif';\n            context.fillText(\"Game over :(\", 100, 150);\n            context.strokeText(\"Game over :(\", 100, 150);\n            context.font = '48px serif';\n            context.fillText(\"Press v (keydown) to start again\", 100, 250);\n            context.strokeText(\"Press v (keydown) to start again\", 100, 250);\n            context.fillText(\"Score: \" + game_player.score, 100, 300);\n            context.strokeText(\"Score: \" + game_player.score, 100, 300);\n\n            break;\n    }\n\n}   \n\n\nfunction update(dt: number) {\n    /*\n    // color\n    hue = (hue + 1) % 360;\n    color = `hsl(${counter}, 50%, 50%`;\n    */\n    switch (game_state) {\n        case game_states.start:\n            start();\n            break;\n        case game_states.play:\n            play();\n            break;\n        case game_states.end:\n            start();\n            break;\n    }\n}\n\n\nfunction loop(t_ms: number) {\n    // calculate dt\n    let dt = t_ms - last_tick_t;\n    last_tick_t = t_ms;\n    update(dt / 1000); // to seconds\n    draw();\n    window.requestAnimationFrame(loop);\n}\n\n\nfunction resized() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    canvas.width = width;\n    canvas.height = height;\n}\n\n\nfunction key(e: KeyboardEvent) {\n\n    switch (e.type) {\n        case \"keydown\":\n            keyStates.add(e.key);\n            if (e.key == \"ArrowUp\" && first_keypress){\n                keyStates.add(e.key);\n                first_keypress = false;\n                game_player.jump(pillars);\n            }\n            break;\n        case \"keyup\":\n            keyStates.delete(e.key);\n            first_keypress = true;\n            break;\n        \n        default:\n            console.warn(e.type);\n    }\n}\n\n\nfunction main() {\n    canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    context = canvas.getContext(\"2d\")!;\n    window.addEventListener(\"keydown\", key);\n    window.addEventListener(\"keyup\", key);\n    resized();\n    loop(performance.now());\n}\n\n\nmain();"],
  "mappings": "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",
  "names": []
}
