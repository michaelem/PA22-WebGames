{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["var canvas: HTMLCanvasElement;\nvar context: CanvasRenderingContext2D;\n\n// system variables\nvar last_tick_t = 0;\nvar width: number;\nvar height: number;\nvar keyStates: Set<string> = new Set();\n\n// game variables\ntype circle = [number, number, number];\nvar playerX: number;\nconst playerY = 90;\nvar playerSpeed: number;\nconst acceleration = 30;\nvar circles: circle[];\nvar fallingSpeed: number;\nconst fallingAcceleration = 0.2;\nconst spawnProb = 0.6;\nvar ended: boolean;\n\nfunction initialize() {\n    playerX = 50;\n    playerSpeed = 0;\n    circles = [];\n    fallingSpeed = 5;\n    ended = false;\n}\n\nfunction draw() {\n    context.resetTransform();\n    context.clearRect(0, 0, width, height);\n    context.translate(0, height-width);\n    context.scale(width/100, width/100);\n    \n    // draw triangle\n    context.fillStyle = \"red\"\n    context.beginPath();\n    context.moveTo(playerX, playerY);\n    context.lineTo(playerX + 3, playerY + 8);\n    context.lineTo(playerX - 3, playerY + 8);\n    context.fill();\n    // draw circles\n    context.fillStyle = \"blue\";\n    for(let c of circles) {\n        if(c[1] < 120) {\n            context.beginPath();\n            context.moveTo(c[0] + c[2], c[1]);\n            context.arc(c[0], c[1], c[2], 0, 2*Math.PI);\n            context.fill();\n        }\n    }\n    context.font = \"4px sans-serif\";\n    context.fillStyle = \"black\";\n    context.fillText(\"Score: \" + Math.round(fallingSpeed).toString(), 3, 80);\n    context.fillText(\"press R to restart\", 65,80)\n    context.fillStyle = \"rgb(70%, 0%, 0%)\"\n    if(ended) {\n        context.fillText(\"You died!\", 40,80)\n    }\n\n}\n\nfunction update(dt: number) {\n    if(ended) {\n        return;\n    }\n    // update player speed\n    if (keyStates.has(\"ArrowLeft\")) {\n        playerSpeed -= acceleration*dt;\n    }\n    if (keyStates.has(\"ArrowRight\")) {\n        playerSpeed += acceleration*dt;\n    }\n    // update player position\n    playerX += playerSpeed*dt;\n    if(playerX < 5) {\n        playerX = 5;\n        playerSpeed = 0;\n    }\n    if(playerX > 95) {\n        playerX = 95;\n        playerSpeed = 0;\n    }\n    // update falling speed\n    fallingSpeed += fallingAcceleration*dt;\n    // update circle positions and check for collisions\n    for(let c of circles) {\n        c[1] += fallingSpeed*dt;\n        if(checkCollision(c)) {\n            ended = true;\n            break;\n        }\n    }\n    // spawn new circles\n    if(Math.random() < spawnProb*dt) {\n        circles.push([Math.random()*100, 30, 7*(Math.random()+0.4)])\n    }\n    // TODO despawn\n}\n\nfunction checkCollision(c: circle) {\n    let dx = c[0]-playerX;\n    let dy = c[1]-playerY;\n    if(dx*dx + dy*dy < c[2]*c[2]) {\n        return true;\n    }\n    dx = c[0]-(playerX+3);\n    dy = c[1]-(playerY+8);\n    if(dx*dx + dy*dy < c[2]*c[2]) {\n        return true;\n    }\n    dx = c[0]-(playerX-3)\n    if(dx*dx + dy*dy < c[2]*c[2]) {\n        return true;\n    }\n    return false;\n}\n\nfunction loop(t_ms: number) {\n    // calculate dt\n    let dt = t_ms - last_tick_t;\n    last_tick_t = t_ms;\n\n    update(dt / 1000); // to seconds\n    draw();\n\n    window.requestAnimationFrame(loop);\n}\n\nfunction resized() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    canvas.width = width;\n    canvas.height = height;\n}\n\nfunction key(e: KeyboardEvent) {\n    switch (e.type) {\n        case \"keydown\":\n            keyStates.add(e.key);\n            if(e.key == \"r\") {\n                initialize();\n                draw();\n            }\n            break;\n        case \"keyup\":\n            keyStates.delete(e.key);\n            break;\n        default:\n            console.warn(\"Wut?\");\n    }\n}\n\nfunction main() {\n    initialize();\n    canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    context = canvas.getContext(\"2d\")!;\n    window.addEventListener(\"keydown\", key);\n    window.addEventListener(\"keyup\", key);\n    window.addEventListener(\"resize\", resized);\n    resized();\n\n    loop(performance.now());\n}\n\n\nmain();"],
  "mappings": "MAAA,GAAI,GACA,EAGA,EAAc,EACd,EACA,EACA,EAAyB,GAAI,KAI7B,EACE,EAAU,GACZ,EACE,EAAe,GACjB,EACA,EACE,EAAsB,GACtB,EAAY,GACd,EAEJ,YAAsB,CAClB,EAAU,GACV,EAAc,EACd,EAAU,CAAC,EACX,EAAe,EACf,EAAQ,EACZ,CAEA,YAAgB,CACZ,EAAQ,eAAe,EACvB,EAAQ,UAAU,EAAG,EAAG,EAAO,CAAM,EACrC,EAAQ,UAAU,EAAG,EAAO,CAAK,EACjC,EAAQ,MAAM,EAAM,IAAK,EAAM,GAAG,EAGlC,EAAQ,UAAY,MACpB,EAAQ,UAAU,EAClB,EAAQ,OAAO,EAAS,CAAO,EAC/B,EAAQ,OAAO,EAAU,EAAG,EAAU,CAAC,EACvC,EAAQ,OAAO,EAAU,EAAG,EAAU,CAAC,EACvC,EAAQ,KAAK,EAEb,EAAQ,UAAY,OACpB,OAAQ,KAAK,GACT,AAAG,EAAE,GAAK,KACN,GAAQ,UAAU,EAClB,EAAQ,OAAO,EAAE,GAAK,EAAE,GAAI,EAAE,EAAE,EAChC,EAAQ,IAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAG,EAAE,KAAK,EAAE,EAC1C,EAAQ,KAAK,GAGrB,EAAQ,KAAO,iBACf,EAAQ,UAAY,QACpB,EAAQ,SAAS,UAAY,KAAK,MAAM,CAAY,EAAE,SAAS,EAAG,EAAG,EAAE,EACvE,EAAQ,SAAS,qBAAsB,GAAG,EAAE,EAC5C,EAAQ,UAAY,mBACjB,GACC,EAAQ,SAAS,YAAa,GAAG,EAAE,CAG3C,CAEA,WAAgB,EAAY,CACxB,GAAG,GAIH,CAAI,EAAU,IAAI,WAAW,GACzB,IAAe,EAAa,GAE5B,EAAU,IAAI,YAAY,GAC1B,IAAe,EAAa,GAGhC,GAAW,EAAY,EACpB,EAAU,GACT,GAAU,EACV,EAAc,GAEf,EAAU,IACT,GAAU,GACV,EAAc,GAGlB,GAAgB,EAAoB,EAEpC,OAAQ,KAAK,GAET,GADA,EAAE,IAAM,EAAa,EAClB,EAAe,CAAC,EAAG,CAClB,EAAQ,GACR,KACJ,CAGJ,AAAG,KAAK,OAAO,EAAI,EAAU,GACzB,EAAQ,KAAK,CAAC,KAAK,OAAO,EAAE,IAAK,GAAI,EAAG,MAAK,OAAO,EAAE,GAAI,CAAC,EAGnE,CAEA,WAAwB,EAAW,CAC/B,GAAI,GAAK,EAAE,GAAG,EACV,EAAK,EAAE,GAAG,EAUd,MATG,GAAG,EAAK,EAAG,EAAK,EAAE,GAAG,EAAE,IAG1B,GAAK,EAAE,GAAI,GAAQ,GACnB,EAAK,EAAE,GAAI,GAAQ,GAChB,EAAG,EAAK,EAAG,EAAK,EAAE,GAAG,EAAE,KAG1B,GAAK,EAAE,GAAI,GAAQ,GAChB,EAAG,EAAK,EAAG,EAAK,EAAE,GAAG,EAAE,GAI9B,CAEA,WAAc,EAAc,CAExB,GAAI,GAAK,EAAO,EAChB,EAAc,EAEd,EAAO,EAAK,GAAI,EAChB,EAAK,EAEL,OAAO,sBAAsB,CAAI,CACrC,CAEA,YAAmB,CACf,EAAQ,OAAO,WACf,EAAS,OAAO,YAChB,EAAO,MAAQ,EACf,EAAO,OAAS,CACpB,CAEA,WAAa,EAAkB,CAC3B,OAAQ,EAAE,UACD,UACD,EAAU,IAAI,EAAE,GAAG,EAChB,EAAE,KAAO,KACR,GAAW,EACX,EAAK,GAET,UACC,QACD,EAAU,OAAO,EAAE,GAAG,EACtB,cAEA,QAAQ,KAAK,MAAM,EAE/B,CAEA,YAAgB,CACZ,EAAW,EACX,EAAS,SAAS,eAAe,QAAQ,EACzC,EAAU,EAAO,WAAW,IAAI,EAChC,OAAO,iBAAiB,UAAW,CAAG,EACtC,OAAO,iBAAiB,QAAS,CAAG,EACpC,OAAO,iBAAiB,SAAU,CAAO,EACzC,EAAQ,EAER,EAAK,YAAY,IAAI,CAAC,CAC1B,CAGA,EAAK",
  "names": []
}
